FROM amazonlinux:${version}

LABEL maintainer="James Kyburz james.kyburz@gmail.com"

ARG NODE_VERSIONS
RUN test -n "$NODE_VERSIONS"

ENV GOPATH /root/.go
ENV GOROOT /usr/local/go
ENV PATH "/usr/local/go/bin:${PATH}"
ENV PATH "/root/.go/bin:${PATH}"
ENV NPM_CONFIG_LOGLEVEL warn

RUN yum install -y git git-core tar gcc-c++ make zip

RUN \
  curl https://storage.googleapis.com/golang/go1.13.linux-amd64.tar.gz -o go.tar.gz && \
  tar -xzf go.tar.gz && \
  mv go /usr/local && \
  rm -rf go.tar.gz

RUN go get github.com/tj/node-prune/cmd/node-prune

RUN bash -c $'\n\
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | bash\n\
  . /root/.nvm/nvm.sh\n\
  for node_version in ${NODE_VERSIONS:?}; do\n\
    nvm install ${node_version:?}\n\
  done\n\
  curl -o- -L https://yarnpkg.com/install.sh | bash\n\
  /root/.yarn/bin/yarn global add npm@latest npx@latest\n\
  for node_version in ${NODE_VERSIONS:?}; do\n\
    for tool in npm npx; do\n\
      rm -rf /root/.nvm/versions/node/v${node_version:?}*/lib/node_modules/${tool:?}\n\
    done\n\
  done\n\
  npm config set audit false'
